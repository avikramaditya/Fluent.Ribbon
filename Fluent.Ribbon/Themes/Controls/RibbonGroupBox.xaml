<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:converters="clr-namespace:Fluent.Converters"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:templateSelectors="clr-namespace:Fluent.TemplateSelectors"
                    mc:Ignorable="d">
    <Style x:Key="Fluent.Ribbon.Styles.GroupBoxSeparator"
           TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Separator.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border x:Name="SeparatorBorder"
                            Width="1"
                            Height="55"
                            Margin="2 5 2 10"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSimplified, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Fluent:RibbonGroupBox}}, FallbackValue=False}" Value="True">
                            <Setter TargetName="SeparatorBorder" Property="Height" Value="Auto" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="Fluent.Ribbon.DataTemplates.RibbonGroupBox.OneLineHeader">
        <TextBlock HorizontalAlignment="Stretch"
                   VerticalAlignment="Center"
                   Text="{Binding}"
                   TextAlignment="Center"
                   TextTrimming="CharacterEllipsis"
                   TextWrapping="NoWrap" />
    </DataTemplate>

    <DataTemplate x:Key="Fluent.Ribbon.DataTemplates.RibbonGroupBox.TwoLineHeader">
        <Fluent:TwoLineLabel HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             HasGlyph="True"
                             Text="{Binding}" />
    </DataTemplate>

    <Style x:Key="Fluent.Ribbon.Styles.RibbonGroupBox.TwoLineHeaderContentControl"
           TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter Fluent:RibbonGroupBox.IsCollapsedHeaderContentPresenter="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Fluent.Ribbon.Styles.RibbonGroupBox"
           TargetType="{x:Type Fluent:RibbonGroupBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Fluent:KeyTip.Margin" Value="0,15,0,0" />
        <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Fluent.Ribbon.Styles.FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelText}" />
        <Setter Property="HeaderTemplateSelector" Value="{Binding Source={x:Static templateSelectors:RibbonGroupBoxHeaderTemplateSelector.Instance}}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="4 2 4 2" />
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.RibbonGroupBox}" />
        <Style.Triggers>
            <Trigger Property="IsSimplified" Value="True">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Medium" />
                <Setter Property="Padding" Value="2 0" />
            </Trigger>
            <Trigger Property="State" Value="QuickAccess">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Height" Value="22" />
                <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.RibbonGroupBoxDropDownButton}" />
                <Setter Property="Width" Value="22" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.RibbonGroupBoxDropDownButton"
                     TargetType="{x:Type Fluent:RibbonGroupBox}">
        <Grid>
            <Border x:Name="PART_ButtonBorder"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1">
                <Fluent:IconPresenter x:Name="iconImage"
                                      SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                      MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                      LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                      IconSize="Small" />
            </Border>

            <Popup x:Name="PART_Popup"
                   Margin="0 0 -4 0"
                   VerticalAlignment="Top"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   StaysOpen="True">
                <Border x:Name="border"
                        Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}"
                        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Border}"
                        BorderThickness="1">
                    <Grid x:Name="PART_ParentPanel"
                          Height="{Binding ContentHeight, RelativeSource={RelativeSource AncestorType=Fluent:RibbonTabControl}, FallbackValue=100}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Fluent:RibbonGroupBoxWrapPanel x:Name="PART_UpPanel"
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="Stretch"
                                                        IsItemsHost="True"
                                                        IsSimplified="{TemplateBinding IsSimplified}" />

                        <Grid x:Name="PART_DownGrid"
                              Grid.Row="1"
                              Grid.Column="0"
                              MaxWidth="{Binding ActualWidth, ElementName=PART_UpPanel}"
                              VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentControl x:Name="PART_HeaderContentControl"
                                            Margin="2 0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.Header.Foreground}"
                                            Content="{TemplateBinding Header}"
                                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                            KeyboardNavigation.IsTabStop="False" />

                            <Fluent:Button x:Name="PART_DialogLauncherButton"
                                           Header="{TemplateBinding LauncherText}"
                                           Grid.Column="1"
                                           Width="16"
                                           Height="16"
                                           Margin="0 0 2 0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Bottom"
                                           Background="Transparent"
                                           Icon="{TemplateBinding LauncherIcon}"
                                           Fluent:RibbonProperties.IconSize="Small"
                                           BorderBrush="Transparent"
                                           Command="{Binding LauncherCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                           CommandParameter="{Binding LauncherCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                           CommandTarget="{Binding LauncherCommandTarget, RelativeSource={RelativeSource TemplatedParent}}"
                                           Focusable="False"
                                           IsEnabled="{Binding IsLauncherEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                           IsTabStop="False"
                                           Template="{DynamicResource Fluent.Ribbon.Templates.DialogLauncherButton}"
                                           ToolTip="{Binding LauncherToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                           Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSimplified" Value="True">
                <Setter TargetName="PART_DownGrid" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ParentPanel" Property="Height" Value="Auto" />
                <Setter TargetName="PART_UpPanel" Property="Orientation" Value="Horizontal" />
            </Trigger>

            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Border}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsDropDownOpen" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Border}" />
            </MultiTrigger>

            <Trigger Property="IsLauncherVisible" Value="True">
                <Setter TargetName="PART_DialogLauncherButton" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="LauncherToolTip" Value="{x:Null}">
                <Setter TargetName="PART_DialogLauncherButton" Property="ToolTip" Value="{Binding LauncherText, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.RibbonGroupBox"
                     TargetType="{x:Type Fluent:RibbonGroupBox}">
        <Grid x:Name="rootGrid"
              HorizontalAlignment="Stretch">
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}" />

            <ContentControl x:Name="nonCollapsedStateContainer"
                            Focusable="False">
                <Grid x:Name="PART_ParentPanel">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Fluent:RibbonGroupBoxWrapPanel x:Name="PART_UpPanel"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="Stretch"
                                                    IsItemsHost="True"
                                                    IsSimplified="{TemplateBinding IsSimplified}" />

                    <Grid x:Name="PART_DownGrid"
                          Grid.Row="1"
                          MaxWidth="{Binding ActualWidth, ElementName=PART_ParentPanel}"
                          Margin="0 0 2 2"
                          VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ContentControl x:Name="PART_HeaderContentControl"
                                        Margin="2 0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.Header.Foreground}"
                                        Content="{TemplateBinding Header}"
                                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                        KeyboardNavigation.IsTabStop="False" />

                        <Fluent:Button x:Name="PART_DialogLauncherButton"
                                       Header="{TemplateBinding LauncherText}"
                                       Grid.Column="1"
                                       Width="16"
                                       Height="16"
                                       Margin="0 0 2 0"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Bottom"
                                       Background="Transparent"
                                       Icon="{TemplateBinding LauncherIcon}"
                                       Fluent:RibbonProperties.IconSize="Small"
                                       BorderBrush="Transparent"
                                       Command="{Binding LauncherCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                       CommandParameter="{Binding LauncherCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                       CommandTarget="{Binding LauncherCommandTarget, RelativeSource={RelativeSource TemplatedParent}}"
                                       IsEnabled="{Binding IsLauncherEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                       Template="{DynamicResource Fluent.Ribbon.Templates.DialogLauncherButton}"
                                       ToolTip="{Binding LauncherToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                       Visibility="Visible" />
                    </Grid>
                </Grid>
            </ContentControl>

            <Grid x:Name="collapsedStateGrid"
                  Grid.RowSpan="2"
                  Margin="{TemplateBinding Padding}"
                  VerticalAlignment="Center"
                  Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="collapsedIconBorder"
                        Grid.Row="0"
                        Grid.RowSpan="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="5 3 5 0"
                        Padding="4"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        BorderThickness="0">
                    <Fluent:IconPresenter x:Name="iconImage"
                                          SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                          MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          CustomSize="{Binding Path=(Fluent:RibbonProperties.CustomIconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                          IconSize="{Binding Path=(Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}" />
                </Border>

                <ContentControl x:Name="PART_CollapsedHeaderContentControl"
                                Style="{DynamicResource Fluent.Ribbon.Styles.RibbonGroupBox.TwoLineHeaderContentControl}"
                                Grid.Row="1"
                                Grid.RowSpan="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="5 0 5 0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.Header.Foreground}"
                                Fluent:RibbonGroupBox.IsCollapsedHeaderContentPresenter="True"
                                Content="{TemplateBinding Header}"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                KeyboardNavigation.IsTabStop="False" />

                <Popup x:Name="PART_Popup"
                       Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                       AllowsTransparency="True"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       PlacementTarget="{Binding ElementName=collapsedStateGrid, Mode=OneWay}">
                    <Border x:Name="border"
                            Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Border}"
                            BorderThickness="1"
                            d:LayoutOverrides="Width">
                        <ContentControl x:Name="popupContent"
                                        Margin="{TemplateBinding Padding}"
                                        Focusable="False" />
                    </Border>
                </Popup>
            </Grid>

            <Rectangle x:Name="separator"
                       Grid.RowSpan="2"
                       Width="1"
                       Margin="0 4"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Stretch"
                       Fill="{DynamicResource Fluent.Ribbon.Brushes.GroupSeparator.Background}"
                       Visibility="{Binding IsSeparatorVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Fluent.Ribbon.Converters.BoolToVisibilityConverter}}" />

            <Image x:Name="PART_SnappedImage"
                   Stretch="Uniform"
                   Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSimplified" Value="True">
                <Setter TargetName="PART_CollapsedHeaderContentControl" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_CollapsedHeaderContentControl" Property="Grid.ColumnSpan" Value="1" />

                <Setter TargetName="PART_CollapsedHeaderContentControl" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_DownGrid" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ParentPanel" Property="Height" Value="Auto" />
                <Setter TargetName="PART_UpPanel" Property="Margin" Value="0" />
                <Setter TargetName="PART_UpPanel" Property="Orientation" Value="Horizontal" />
                <Setter TargetName="collapsedIconBorder" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="collapsedIconBorder" Property="Grid.RowSpan" Value="2" />

                <Setter TargetName="collapsedIconBorder" Property="Margin" Value="0" />
            </Trigger>

            <Trigger Property="State" Value="Collapsed">
                <Setter TargetName="collapsedStateGrid" Property="Visibility" Value="Visible" />
                <Setter TargetName="nonCollapsedStateContainer" Property="Content" Value="{x:Null}" />
                <Setter TargetName="nonCollapsedStateContainer" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="popupContent" Property="Content" Value="{Binding ElementName=PART_ParentPanel}" />
                <Setter TargetName="rootGrid" Property="HorizontalAlignment" Value="Left" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="State" Value="Collapsed" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
            </MultiTrigger>

            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
            </Trigger>

            <Trigger Property="IsLauncherVisible" Value="False">
                <Setter TargetName="PART_DialogLauncherButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="LauncherToolTip" Value="{x:Null}">
                <Setter TargetName="PART_DialogLauncherButton" Property="ToolTip" Value="{Binding LauncherText, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.DialogLauncherButton"
                     TargetType="{x:Type Fluent:Button}">
        <Border x:Name="outerBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <Fluent:IconPresenter x:Name="iconImage"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                  LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                  CustomSize="8,8"
                                  IconSize="Custom" />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="LargeIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="iconImage" Property="SmallIcon" Value="{DynamicResource Fluent.Ribbon.Images.DialogLauncher}" />
            </MultiTrigger>

            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter TargetName="iconImage" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="-1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>